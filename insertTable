#!/bin/bash

shopt -s extglob
export LC_COLLATE=C
col_arr=()
datatype_arr=()
all_pkarr=()
str1=''
str2=''
str_pk=''
tables=()
rowdata=''
old_isf=$ISF


while true
do 
    echo "All tables "
echo "------------- "
                ls | grep -v '_metadata'
echo "------------- "

    read -p "Enter the table name you want to insert data into : " tablename
tablename=${tablename,,}



    case "$tablename" in
        "q")
            read -p "Do you want to return to the main list? (y/n): " answer
            answer=${answer,,}

            case "$answer" in
                y)
                    echo "Returning to the main list..."
                    . ~/project/mainEntry 
                    break
                    ;;
                n)
                    echo "Continue inserting into table..."
                    continue
                    ;;
                *)
                    echo "Invalid option"
                    ;;
            esac
            ;;
        *)
esac 


if [ ! -f $tablename ]
then
echo "please enter a valid table name" 
else
all_pk=`cut -d : -f 1 $tablename`
read -ra all_pkarr <<< $all_pk
str1=`awk  '{if (NR == 1){
print $0}}' $tablename"_metadata"`
str2=`awk  '{if (NR == 2){
print $0}}' $tablename"_metadata"`
IFS=':'
read -a col_arr <<< "$str1"
read -a datatype_arr <<< "$str2"
IFS=$old_isf

break
fi
done

for (( i=0 ; i < ${#col_arr[@]} ; i++))
do 

while true
do
read -p "
please enter value of col ${col_arr[i]} data type is ${datatype_arr[i]} :"  val
flag=false
if(( i== 0))
then
 for (( j=0 ; j < ${#all_pkarr[@]} ; j++))
do 
 val=$(echo "$val" | sed 's/[[:space:]]/_/g')


if [[ $val == ${all_pkarr[j]} ]]
then
echo "primary key is already exist "
flag=true
break
fi 
done
fi 
if [[ $flag == "true" ]]
then
continue
fi


if [[ $flag == "false" ]]
then
if [[ ${datatype_arr[i]} == "int" ]]
then
if [[ $val =~ ^[0-9]+$ && $val -gt 0 ]]
then
rowdata+=$val:
break



else
echo "data type of column is integer please enter numbers "
continue
fi 



else 
case $val in
 ''|' ')
echo "You must enter a value first" 
continue
;;

[0-9]*)
 echo "Value can't start with a number" 
 continue
 ;; 

 *[\!\@\#\$\%^\&\*\(\)\+\|\,\;:~\`\.\/\=\-\]\>\[\<\']*)
  echo "Value can't contain any special characters"
            continue
            ;;
+([a-zA-Z0-9]*))
 val=$(echo "$val" | sed 's/[[:space:]]/_/g')
rowdata+=$val:
break

 ;;

*)


echo "invalid data type please enter String"
continue
esac				
fi

fi 


done
done

echo $rowdata >> $tablename

echo "Data added successfully"
return




